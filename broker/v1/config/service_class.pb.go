// Code generated by protoc-gen-go. DO NOT EDIT.
// source: broker/v1/config/service_class.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	broker/v1/config/service_class.proto
	broker/v1/config/service_plan.proto

It has these top-level messages:
	ServiceClass
	Deployment
	CatalogEntry
	ServicePlan
	CatalogPlan
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ServiceClass defines a service that are exposed to Istio service consumers.
// The service is linked into one or more ServicePlan.
type ServiceClass struct {
	// Required. Istio deployment spec for the service class.
	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment" json:"deployment,omitempty"`
	// Required. Listing information for the public catalog.
	Entry *CatalogEntry `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *ServiceClass) Reset()                    { *m = ServiceClass{} }
func (m *ServiceClass) String() string            { return proto.CompactTextString(m) }
func (*ServiceClass) ProtoMessage()               {}
func (*ServiceClass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServiceClass) GetDeployment() *Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *ServiceClass) GetEntry() *CatalogEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

// Deployment defines how the service instances are deployed.
type Deployment struct {
	// For truely multi-tenant service, the deployed service instance name.
	Instance string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Deployment) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

// CatalogEntry defines listing information for this service within the exposed
// catalog.  The message is a subset of OSBI service fields defined in
// https://github.com/openservicebrokerapi
type CatalogEntry struct {
	// Required. Public service name.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Required. Public unique service guid.
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// Required. Public short service description.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *CatalogEntry) Reset()                    { *m = CatalogEntry{} }
func (m *CatalogEntry) String() string            { return proto.CompactTextString(m) }
func (*CatalogEntry) ProtoMessage()               {}
func (*CatalogEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CatalogEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CatalogEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CatalogEntry) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceClass)(nil), "istio.broker.v1.config.ServiceClass")
	proto.RegisterType((*Deployment)(nil), "istio.broker.v1.config.Deployment")
	proto.RegisterType((*CatalogEntry)(nil), "istio.broker.v1.config.CatalogEntry")
}

func init() { proto.RegisterFile("broker/v1/config/service_class.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x85, 0x99, 0xf1, 0x07, 0x7b, 0x5b, 0x5c, 0x64, 0x21, 0x83, 0x20, 0x96, 0xa1, 0x8b, 0xae,
	0x12, 0xaa, 0x3b, 0x97, 0xad, 0xbe, 0xc0, 0xe8, 0xca, 0x8d, 0xa4, 0x99, 0x6b, 0xb9, 0x38, 0xcd,
	0x0d, 0x49, 0x18, 0xe8, 0x4b, 0xf8, 0xcc, 0xd2, 0x04, 0xc7, 0x41, 0x74, 0x97, 0x9f, 0xef, 0x3b,
	0x1c, 0x0e, 0x2c, 0xb6, 0x9e, 0x3f, 0xd0, 0xab, 0x7e, 0xa5, 0x0c, 0xdb, 0x77, 0xda, 0xa9, 0x80,
	0xbe, 0x27, 0x83, 0x6f, 0xa6, 0xd3, 0x21, 0x48, 0xe7, 0x39, 0xb2, 0xb8, 0xa2, 0x10, 0x89, 0x65,
	0x66, 0x65, 0xbf, 0x92, 0x99, 0xad, 0x3f, 0x0b, 0x98, 0x3d, 0x67, 0x7e, 0x73, 0xc4, 0xc5, 0x1a,
	0xa0, 0x45, 0xd7, 0xf1, 0x61, 0x8f, 0x36, 0x56, 0xc5, 0xbc, 0x58, 0x4e, 0xef, 0x6a, 0xf9, 0xb7,
	0x2d, 0x1f, 0x07, 0xb2, 0x19, 0x59, 0xe2, 0x01, 0xce, 0xd0, 0x46, 0x7f, 0xa8, 0xca, 0xa4, 0x2f,
	0xfe, 0xd3, 0x37, 0x3a, 0xea, 0x8e, 0x77, 0x4f, 0x47, 0xb6, 0xc9, 0x4a, 0xbd, 0x04, 0xf8, 0x49,
	0x15, 0xd7, 0x70, 0x41, 0x36, 0x44, 0x6d, 0x0d, 0xa6, 0x2e, 0x93, 0x66, 0xb8, 0xd7, 0x2f, 0x30,
	0x1b, 0x07, 0x08, 0x01, 0xa7, 0x56, 0xef, 0xbf, 0xb9, 0x74, 0x16, 0x97, 0x50, 0x52, 0x9b, 0x6a,
	0x4c, 0x9a, 0x92, 0x5a, 0x31, 0x87, 0x69, 0x8b, 0xc1, 0x78, 0x72, 0x91, 0xd8, 0x56, 0x27, 0xe9,
	0x63, 0xfc, 0xb4, 0xbe, 0x7d, 0xbd, 0xc9, 0x6d, 0x89, 0x95, 0x76, 0xa4, 0x7e, 0xaf, 0xbb, 0x3d,
	0x4f, 0x83, 0xde, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x27, 0x34, 0x5c, 0x95, 0x78, 0x01, 0x00,
	0x00,
}
